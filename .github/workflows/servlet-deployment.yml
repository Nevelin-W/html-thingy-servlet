name: Java Servlet Deployment
on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Choose deployment action'
        required: true
        type: choice
        options:
          - plan
          - apply
          - destroy

jobs:
  terraform-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.11.0
          terraform_wrapper: false

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Validate
        run: terraform validate
        working-directory: ./terraform

      - name: Terraform Plan
        if: ${{ github.event.inputs.action == 'plan' }}
        run: terraform plan
        working-directory: ./terraform

      - name: Terraform Apply
        if: ${{ github.event.inputs.action == 'apply' }}
        run: terraform apply -auto-approve
        working-directory: ./terraform

      - name: Set up JDK 11
        if: ${{ github.event.inputs.action == 'apply' }}
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'corretto'
      
      - name: Build with Maven
        if: ${{ github.event.inputs.action == 'apply' }}
        run: mvn clean package

      - name: Deploy to Elastic Beanstalk
        if: ${{ github.event.inputs.action == 'apply' }}
        run: |
          # Upload WAR file to S3 first
          aws s3 cp target/servlet-webapp.war s3://your-deployment-bucket/webapps/

          # Create application version
          aws elasticbeanstalk create-application-version \
            --application-name servlet-web-application \
            --version-label ${{ github.sha }} \
            --source-bundle S3Bucket=your-deployment-bucket,S3Key=webapps/servlet-webapp.war
          
          # Update Elastic Beanstalk environment
          aws elasticbeanstalk update-environment \
            --environment-name servlet-environment \
            --version-label ${{ github.sha }}

      - name: Terraform Destroy
        if: ${{ github.event.inputs.action == 'destroy' }}
        run: terraform destroy -auto-approve
        working-directory: ./terraform
